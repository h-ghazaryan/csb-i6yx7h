{"version":3,"sources":["components/Navbar.tsx","hooks/index.ts","redux/bookSlice.ts","pages/AddBook.tsx","components/BookInfo.tsx","pages/BookList.tsx","App.tsx","reportWebVitals.ts","redux/store.ts","index.tsx"],"names":["Navbar","flexDirection","justifyContent","alignItems","width","as","p","mx","maxWidth","marginBottom","to","fontWeight","fontSize","variant","_hover","bg","padding","color","letterSpacing","mr","useAppDispatch","useDispatch","useAppSelector","useSelector","initialState","bookList","id","uuidv4","title","author","bookSlice","createSlice","name","reducers","addNewBook","state","action","push","payload","updateBook","map","book","deleteBook","filter","actions","AddBook","useParams","history","useHistory","dispatch","find","useState","setTitle","setAuthor","editBook","clearInputs","height","d","value","placeholder","onChange","e","currentTarget","marginTop","colorScheme","type","onClick","BookInfo","rest","shadow","borderWidth","mt","aria-label","icon","Delete","marginRight","Edit","redirect","BookList","console","log","paddingTop","paddingX","rounded","px","py","spacing","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","theme","extendTheme","styles","global","backgroundColor","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6040f2b7.chunk.js","sourcesContent":["import { Button, Flex, Box, Text } from \"@chakra-ui/react\";\nimport { Link } from \"react-router-dom\";\n\nconst Navbar = () => {\n  return (\n    <Flex\n      flexDirection=\"row\"\n      justifyContent=\"space-between\"\n      alignItems=\"center\"\n      width=\"100%\"\n      as=\"nav\"\n      p={4}\n      mx=\"auto\"\n      maxWidth=\"1150px\"\n      marginBottom=\"40px\"\n    >\n      <Box>\n        <Link to=\"/\">\n          <Button\n            fontWeight={[\"medium\", \"medium\", \"medium\"]}\n            fontSize={[\"xs\", \"sm\", \"lg\", \"xl\"]}\n            variant=\"ghost\"\n            _hover={{ bg: \"rgba(0,0,0,.2)\" }}\n            padding=\"1\"\n            color=\"white\"\n            letterSpacing=\"0.65px\"\n          >\n            <Text fontSize={[\"xl\", \"2xl\", \"2xl\", \"2xl\"]} mr={2}>\n              ðŸ¦‰\n            </Text>\n            Library App\n          </Button>\n        </Link>\n      </Box>\n\n      <Box>\n        <Link to=\"/\">\n          <Button\n            fontWeight={[\"medium\", \"medium\", \"medium\"]}\n            fontSize={[\"xs\", \"sm\", \"lg\", \"xl\"]}\n            variant=\"ghost\"\n            _hover={{ bg: \"rgba(0,0,0,.2)\" }}\n            p={[1, 4]}\n            color=\"white\"\n          >\n            List Books\n          </Button>\n        </Link>\n        <Link to=\"/add-new-book\">\n          <Button\n            fontWeight={[\"medium\", \"medium\", \"medium\"]}\n            fontSize={[\"xs\", \"sm\", \"lg\", \"xl\"]}\n            variant=\"ghost\"\n            _hover={{ bg: \"rgba(0,0,0,.2)\" }}\n            p={[1, 4]}\n            color=\"white\"\n          >\n            Add Book\n          </Button>\n        </Link>\n      </Box>\n    </Flex>\n  );\n};\n\nexport default Navbar;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { RootState, AppDispatch } from '../redux/store';\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState } from './store';\nimport { v4 as uuidv4 } from 'uuid';\nimport { BookState } from '../types';\n\ntype initialStateType = {\n  bookList: BookState[];\n};\n\nconst bookList: BookState[] = [\n  {\n    id: uuidv4(),\n    title: '1984',\n    author: 'George Orwell',\n  },\n  {\n    id: uuidv4(),\n    title: \"Harry Potter and the Philosopher's Stone\",\n    author: 'J. K. Rowling',\n  },\n  {\n    id: uuidv4(),\n    title: 'The Lord of the Rings',\n    author: 'J.R.R Tolkien',\n  },\n];\n\nconst initialState: initialStateType = {\n  bookList,\n};\n\nexport const bookSlice = createSlice({\n  name: 'book',\n  initialState,\n  reducers: {\n    addNewBook: (state, action: PayloadAction<BookState>) => {\n      state.bookList.push(action.payload);\n    },\n    updateBook: (state, action: PayloadAction<BookState>) => {\n      const {\n        payload: { title, id, author },\n      } = action;\n\n      state.bookList = state.bookList.map((book) =>\n        book.id === id ? { ...book, author, title } : book\n      );\n    },\n    deleteBook: (state, action: PayloadAction<{ id: string }>) => {\n      state.bookList = state.bookList.filter(\n        (book) => book.id !== action.payload.id\n      );\n    },\n  },\n});\n\nexport const { addNewBook, updateBook, deleteBook } = bookSlice.actions;\n\nexport const selectBookList = (state: RootState) => state.book.bookList;\n\nexport default bookSlice.reducer;\n","import {\n  Box,\n  Button,\n  Flex,\n  FormControl,\n  FormLabel,\n  Heading,\n  Input\n} from \"@chakra-ui/react\";\n\nimport { useState } from \"react\";\nimport { useAppDispatch, useAppSelector } from \"../hooks\";\nimport { addNewBook, updateBook } from \"../redux/bookSlice\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { useParams, useHistory } from \"react-router-dom\";\n\nconst AddBook = () => {\n  const { id } = useParams<{ id: string }>();\n  const history = useHistory();\n  const dispatch = useAppDispatch();\n  const book = useAppSelector((state) =>\n    state.book.bookList.find((book) => book.id === id)\n  );\n\n  const [title, setTitle] = useState<string | undefined>(book?.title || \"\");\n  const [author, setAuthor] = useState<string | undefined>(book?.author || \"\");\n\n  const handleOnSubmit = () => {\n    if (id) {\n      editBook();\n      return;\n    }\n    dispatch(addNewBook({ author, title, id: uuidv4() }));\n    clearInputs();\n  };\n\n  const editBook = () => {\n    dispatch(updateBook({ author, title, id }));\n    clearInputs();\n    history.push(\"/\");\n  };\n\n  const clearInputs = () => {\n    setTitle(\"\");\n    setAuthor(\"\");\n  };\n\n  return (\n    <Flex\n      height=\"100vh\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      flexDirection=\"column\"\n    >\n      <Box width=\"50%\">\n        <Box\n          d=\"flex\"\n          flexDirection=\"row\"\n          justifyContent=\"space-between\"\n          marginBottom=\"20px\"\n        >\n          <Heading color=\"white\">Add Book</Heading>\n        </Box>\n        <FormLabel color=\"white\">Title</FormLabel>\n        <Input\n          value={title}\n          color=\"white\"\n          placeholder=\"The Lord of the Rings\"\n          onChange={(e) => setTitle(e.currentTarget.value)}\n        />\n        <FormLabel color=\"white\" marginTop={4}>\n          Author\n        </FormLabel>\n        <Input\n          value={author}\n          color=\"white\"\n          placeholder=\"J.R.R Tolkien\"\n          onChange={(e) => setAuthor(e.currentTarget.value)}\n        />\n        <Button\n          marginTop={4}\n          colorScheme=\"teal\"\n          type=\"submit\"\n          onClick={handleOnSubmit}\n        >\n          Submit\n        </Button>\n      </Box>\n    </Flex>\n  );\n};\n\nexport default AddBook;\n","import { DeleteIcon, EditIcon } from '@chakra-ui/icons';\nimport { Box, Heading, IconButton, Text } from '@chakra-ui/react';\n\nimport { useAppDispatch } from '../hooks';\nimport { deleteBook } from '../redux/bookSlice';\nimport { useHistory } from 'react-router-dom';\n\nconst BookInfo = ({\n  title,\n  author,\n  id,\n  ...rest\n}: {\n  title: string | undefined;\n  author: string | undefined;\n  id: string;\n}) => {\n  const dispatch = useAppDispatch();\n  const history = useHistory();\n\n  const redirect = (id: string) => {\n    history.push(`/update-book/${id}`);\n  };\n\n  return (\n    <Box\n      p={5}\n      justifyContent=\"space-between\"\n      d=\"flex\"\n      shadow=\"md\"\n      borderWidth=\"1px\"\n      {...rest}\n    >\n      <Box d=\"flex\" flexDirection=\"column\">\n        <Heading fontSize=\"xl\">{title}</Heading>\n        <Text mt={4}>{author}</Text>\n      </Box>\n      <Box>\n        <IconButton\n          color=\"#1a202c\"\n          aria-label=\"\"\n          icon={<DeleteIcon />}\n          marginRight=\"1rem\"\n          onClick={() => dispatch(deleteBook({ id }))}\n        />\n        <IconButton\n          color=\"#1a202c\"\n          aria-label=\"\"\n          icon={<EditIcon />}\n          onClick={() => redirect(id)}\n        />\n      </Box>\n    </Box>\n  );\n};\n\nexport default BookInfo;\n","import { Box, Button, Flex, Heading, Stack } from \"@chakra-ui/react\";\n\nimport { Link } from \"react-router-dom\";\nimport { useAppSelector } from \"../hooks\";\nimport BookInfo from \"../components/BookInfo\";\n\nconst BookList = () => {\n  const bookList = useAppSelector((state) => state.book.bookList);\n  console.log(bookList);\n  return (\n    <Flex\n      height=\"100vh\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      flexDirection=\"column\"\n      paddingTop=\"40px\"\n    >\n      <Box width=\"50%\">\n        <Box\n          d=\"flex\"\n          flexDirection=\"row\"\n          justifyContent=\"space-between\"\n          marginBottom=\"20px\"\n        >\n          <Heading color=\"white\">Book List</Heading>\n          <Link to=\"/add-new-book\">\n            <Button paddingX=\"3rem\">Add</Button>\n          </Link>\n        </Box>\n        <Box rounded=\"md\" bg=\"purple.500\" color=\"white\" px=\"15px\" py=\"15px\">\n          <Stack spacing={8}>\n            {bookList.map((book) => (\n              <BookInfo\n                key={book.id}\n                title={book.title}\n                author={book.author}\n                id={book.id}\n              />\n            ))}\n          </Stack>\n        </Box>\n      </Box>\n    </Flex>\n  );\n};\n\nexport default BookList;\n","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport Navbar from './components/Navbar';\nimport AddBook from './pages/AddBook';\nimport BookList from './pages/BookList';\n\nfunction App() {\n  return (\n    <Router>\n      <Navbar />\n      <Switch>\n        <Route path=\"/\" exact component={BookList} />\n        <Route path=\"/add-new-book\" component={AddBook} />\n        <Route path=\"/update-book/:id\" component={AddBook} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit';\nimport { bookSlice } from './bookSlice';\n\nexport const store = configureStore({\n  reducer: {\n    book: bookSlice.reducer,\n  },\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ChakraProvider, extendTheme } from '@chakra-ui/react';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\n\nconst theme = extendTheme({\n  styles: {\n    global: {\n      'html, body': {\n        backgroundColor: 'rgb(26,32,44)',\n      },\n    },\n  },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ChakraProvider theme={theme}>\n        <App />\n      </ChakraProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}